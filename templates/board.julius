if (isEventSourceSupported()) {
    console.log("Eventsource initialization...");
    var src = getEventSource("b-"+#{toJSON board});
    // post autoload
    $(".thread").each(function() {
        var id = $(this).attr("id").split("-")[1];
        var thread = $(this);
        src.addEventListener(#{toJSON board}+'-'+id+'-'+#{toJSON posterId}, function(msg) {
            thread.children().append(decodeBase64(msg.data));
            initPosts();
            Foundation.libs.forms.assemble();
        });
    });
    // remove deleted posts
    src.addEventListener(#{toJSON board}+"-0-deleted-"+#{toJSON posterId}, deletedPostsHandler); // the threads
    $(".thread").each(function() {  // thread's replies
        var id = $(this).attr("id").split("-")[1];
        src.addEventListener(#{toJSON board}+"-"+id+"-deleted-"+#{toJSON posterId}, deletedPostsHandler);
    });
    // dynamic updating of edited posts
    $(".thread").each(function() {
        var id = $(this).attr("id").split("-")[1];
        src.addEventListener(#{toJSON board}+"-"+id+"-edited-"+#{toJSON posterId}, editedPostsHandler);
    });
} else {
    console.log("Eventsource isn't supported.");
}

function expandThread(board, thread) {
    var replies = Monaba['expThreads'][thread];
    delete Monaba['expThreads'][thread];
    Monaba['expThreads'][thread] = $("#thread-"+thread+" .reply");
    if (replies) {
        $("#thread-"+thread+" .omitted").toggle();
        $("#thread-"+thread+" .reply").remove();
        $("#thread-"+thread+" .truncate-thread").toggle().after(replies);;
    } else {
        $("#thread-"+thread+" .omitted .ajax-loading").toggle();
        $.get("/api/thread/"+board+"/"+thread+"/all", function(data) {
            if (/reply/.test(data)) {
                $("#thread-"+thread+" .omitted .ajax-loading").toggle();
                $("#thread-"+thread+" .omitted").toggle();
                $("#thread-"+thread+" .reply").remove();
                $("#thread-"+thread+" .truncate-thread").toggle().after(data);
                initPosts();
                if (getItem("useMathjax")) {
                    MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
                }
            } else if (/NoSuchThread/.test(data)) {
                popupAlert(#{toJSON $ msgrender MsgThreadNotExist}, 2000);
                delete Monaba['expThreads'][thread];
                $("#thread-"+thread+" .omitted .ajax-loading").toggle();
            } else if (/EmptyThread/.test(data)) {
                popupAlert(#{toJSON $ msgrender MsgNoPostsAnymore}, 2000);
                delete Monaba['expThreads'][thread];
                $("#thread-"+thread+" .omitted .ajax-loading").toggle();
            }
        });
    }
}

function truncateThread(thread) {
    var replies = Monaba['expThreads'][thread];
    delete Monaba['expThreads'][thread];    
    Monaba['expThreads'][thread] = $("#thread-"+thread+" .reply");
    $("#thread-"+thread+" .omitted").toggle();
    $("#thread-"+thread+" .reply").remove();
    $("#thread-"+thread+" .truncate-thread").toggle().after(replies);
}
